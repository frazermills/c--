Syntax for language goes here

- variable declaration (haven't decided whether type inferred or not)
- for loops
- if statements including else (similar if else as in c)
- functions (will probably leave them as a single type so not like in c where you have to specify the return type, idk I don't mind depends if I'm doing type inferred variables for consistency sake)
- arrays
- ints, floats, chars (stored as ints but evaluated runtime maybe?), perhaps strings as a separate data type (probably treated as char arrays with '\0' at end)

- probably leave pointers out, if I can't figure out how to implement them/don't have time
any other features are welcome, and I don't mind about the exact syntax if anyone wants to be creative with it
also:

 - 'built in' functions that will map to some c ones from stdio, stdlib etc  (i.e. if we have a 'print' it will map to 'printf' and have the same behaviour as that)
    given a large part of the program will the be repl environment thing, it will be quicker and easier to write it as an interpreter
